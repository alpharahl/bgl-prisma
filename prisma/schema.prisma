// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  name           String?
  reportsMade    Report[] @relation(name: "Reporter")
  reportsAgainst Report[] @relation(name: "Reportee")
}

model Game {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  League League[]
  logo   String?
}

model Report {
  id           Int     @id @default(autoincrement())
  reporter     User    @relation(name: "Reporter", references: [id], fields: [reporterId])
  reporterId   Int
  reportee     User    @relation(name: "Reportee", references: [id], fields: [reporteeId])
  reporteeId   Int
  reporterName String
  reporteeName String
  event        Event   @relation(fields: [eventId], references: [id])
  eventId      Int
  series       Series  @relation(fields: [seriesId], references: [id])
  videoLink    String
  lap          Int
  description  String
  seriesId     Int
  League       League? @relation(fields: [leagueId], references: [id])
  leagueId     Int?
}

model League {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  acronymn String    @unique
  about    String?
  game     Game      @relation(fields: [gameId], references: [id])
  gameId   Int
  logo     String?
  Series   Series[]
  discord  String?
  Sponsor  Sponsor[]
  hidden   Boolean   @default(false)
  Report   Report[]
}

model Admins {
  id         String  @id
  breakGlass Boolean @default(false)
}

model Series {
  id          Int             @id @default(autoincrement())
  name        String
  logo        String
  league      League          @relation(fields: [leagueId], references: [id])
  leagueId    Int
  description String?
  Event       Event[]
  hidden      Boolean         @default(false)
  Report      Report[]
  cars        Car[]           @relation("SeriesToCar")
  sections    SeriesSection[]
}

model SeriesSection {
  id       Int      @id @default(autoincrement())
  title    String
  content  String[]
  Series   Series?  @relation(fields: [seriesId], references: [id])
  seriesId Int?
}

model Car {
  id        Int      @id @default(autoincrement())
  name      String
  shorthand String
  Series    Series[] @relation("SeriesToCar")
}

model Event {
  id          Int      @id @default(autoincrement())
  name        String
  time        DateTime
  description String
  location    String
  seriesId    Int
  series      Series   @relation(fields: [seriesId], references: [id])
  Report      Report[]
}

model Sponsor {
  id       Int     @id @default(autoincrement())
  league   League  @relation(fields: [leagueId], references: [id])
  leagueId Int
  name     String
  link     String
  logo     String
  disabled Boolean @default(false)
}
